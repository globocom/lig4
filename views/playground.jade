doctype html
html
  head
    title='Ligue Quatro - Playground'

    meta(charset='UTF-8')
    meta(name='description' content='Baseado no jogo Ligue Quatro, o desafio é criar um algoritmo capaz de realizar a melhor jogada.')

    meta(itemprop='image' content='https//braziljs.globo.com/thumbnail.png')
    meta(name='twitter:image' content='https//braziljs.globo.com/thumbnail.png')
    meta(property='og:image' content='https//braziljs.globo.com/thumbnail.png')

    meta(itemprop='name' content='Ligue Quatro')
    meta(itemprop='description' content='Baseado no jogo Ligue Quatro, o desafio é criar um algoritmo capaz de realizar a melhor jogada.')

    meta(name='twitter:title' content='Ligue Quatro')
    meta(name='twitter:description' content='Baseado no jogo Ligue Quatro, o desafio é criar um algoritmo capaz de realizar a melhor jogada.')

    meta(property='og:title' content='Ligue Quatro')
    meta(property='og:description' content='Baseado no jogo Ligue Quatro, o desafio é criar um algoritmo capaz de realizar a melhor jogada.')
    meta(property='og:url' content='https://braziljs.globo.com')

    meta(name='apple-mobile-web-app-capable' content='yes')
    meta(name='apple-mobile-web-app-status-bar-style' content='default')
    meta(name='viewport', content='initial-scale=1, width=device-width')

    link(href='//fonts.googleapis.com/css?family=Open+Sans:400,300,700', rel='stylesheet')
    link(href='styles/playground.css', rel='stylesheet')

  body
    aside(class="aside")
        include blocks/playground-aside

    section(class='section')
      div(id='editor' class='editor' data-username='#{ user.login }')
        | 'use strict';
        | </br>
        | /*
        |  * A função Algorithm encapsula a lógica das jogadas.
        |  * A instância do Algorithm persiste durante toda a partida.
        |  */
        | </br>
        | function Algorithm () {
        | </br>
        |     /*
        |      * Cada chamada de 'move' corresponde a uma peça jogada.
        |      * Esse recebe as colunas disponíveis do tabuleiro
        |      * e o estado atual do mesmo.
        |      */
        | </br>
        |     this.move = function (availableColumns, gameBoard) {
        | </br>
        |         /*
        |          * Exemplo dos argumentos passados
        |          *
        |          * availableColumns: [0, 1, 2, 3, 4, 5, 6]
        |          *
        |          * gameBoard: [
        |          *  [null, null, null, null, null, null],
        |          *  [null, null, null, null, null, null],
        |          *  [null, null, null, null, null, null],
        |          *  [null, null, null, null, null, null],
        |          *  [null, null, null, null, null, null],
        |          *  [null, null, null, null, null, null],
        |          *  [null, null, null, null, null, null],
        |          * ]
        |          *
        |          * O retorno deve ser o índice númerico
        |          * de uma coluna válida, para que a jogada
        |          * seja realizada com sucesso.
        |          */
        | </br>
        |         return availableColumns[0];
        |     }
        | }

    script(src='scripts/playground.js')
